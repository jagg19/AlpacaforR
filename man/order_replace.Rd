% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Orders.R
\name{order_replace}
\alias{order_replace}
\alias{replace_orders}
\title{Replace Order Details (Deprecated)}
\usage{
order_replace(
  ticker_id,
  qty = NULL,
  time_in_force = "day",
  limit_price = NULL,
  stop_price = NULL,
  live = FALSE,
  v = 2
)

replace_orders(
  ticker_id,
  qty = NULL,
  time_in_force = "day",
  limit_price = NULL,
  stop_price = NULL,
  live = FALSE,
  v = 2
)
}
\arguments{
\item{ticker_id}{\code{(character)} The ticker symbol or the order id.}

\item{qty}{\code{(integer)} The amount of shares to replace. Defaults to orders existing quantity.}

\item{time_in_force}{\code{(character)} The type of time order. I.E day, gtc, opg, cls, ioc, fok. Defaults to the replaced order's existing time in force. Please see \href{https://alpaca.markets/docs/trading-on-alpaca/orders/#time-in-force}{Understand Orders} for more info.}

\item{limit_price}{\code{(numeric)} If order type was a limit, then enter the limit price here. Defaults to replaced order's existing limit price (if applicable.)}

\item{stop_price}{\code{(numeric)} If order type was a stop, then enter the stop price here. Defaults to replaced order's existing stop price (if applicable.)}

\item{live}{\code{(logical)} TRUE / FALSE if you are connecting to a live account. Default to FALSE, so it will use the paper url if nothing was provided.}

\item{v}{\code{(integer)} The API version number. Defaults to 2. There is only the V2 API available for all endpoints other than Bars as of 2020-04-18. This argument is present to accommodate future API versions.}
}
\value{
Order \code{(tibble)} \href{https://alpaca.markets/docs/api-documentation/api-v2/orders/#order-entity}{Order object} or Array of Order Objects with the following information:
\itemize{
\item{\code{id}}{\code{(character)} order id}
\item{\code{client_order_id}}{\code{(character)} client unique order id}
\item{\code{created_at}}{\code{(POSIXct)} nullable When the order was created}
\item{\code{updated_at}}{\code{(POSIXct)} nullable When the order was updated}
\item{\code{submitted_at}}{\code{(POSIXct)} nullable When the order was submitted}
\item{\code{filled_at}}{\code{(POSIXct)} nullable When the order was filled}
\item{\code{expired_at}}{\code{(POSIXct)} nullable When the order was expired}
\item{\code{canceled_at}}{\code{(POSIXct)} nullable When the order was canceled}
\item{\code{failed_at}}{\code{(POSIXct)} nullable When the order failed}
\item{\code{replaced_at}}{\code{(POSIXct)} nullable When the order was replaced}
\item{\code{replaced_by}}{\code{(character)} id of replacement order}
\item{\code{replaces}}{\code{(character)} id of the replaced order}
\item{\code{asset_id}}{\code{(character)} asset ID}
\item{\code{symbol}}{\code{(character)} Asset symbol}
\item{\code{exchange}}{\code{(character)} Asset exchange}
\item{\code{asset_class}}{\code{(character)} Asset class}
\item{\code{qty}}{\code{(integer)} Ordered quantity}
\item{\code{filled_qty}}{\code{(integer)} Filled quantity}
\item{\code{filled_avg_price}}{\code{(numeric)} Filled average price}
\item{\code{order_class}}{\code{(character)}}
\item{\code{order_type}}{\code{(character)}}
\item{\code{type}}{\code{(character)} Valid values: market, limit, stop, stop_limit}
\item{\code{side}}{\code{(character)} Valid values: buy, sell}
\item{\code{time_in_force}}{\code{(character)} time in force}
\item{\code{limit_price}}{\code{(numeric)} Limit price}
\item{\code{stop_price}}{\code{(numeric)} Stop price}
\item{\code{status}}{\code{(character)} Status of the order}
\item{\code{extended_hours}}{\code{(logical)} If true, eligible for execution outside regular trading hours}.
\item{\code{legs}}{\code{(character)} When querying non-simple order_class orders in a nested style, an array of Order entities associated with this order. Otherwise, null.}
}
}
\description{
Use \code{\link[AlpacaforR]{order_submit}} with \code{action = "replace"}. Cancels any open order by either ticker or order id. If multiple open orders exist for one ticker, then the default is to cancel the most recent order. Useful for updating unprocessed market orders placed outside market hours, or for updating limit, and stop orders. See \href{https://alpaca.markets/docs/api-documentation/api-v2/orders#replace-an-order}{Orders} for details.

Use \code{\link[AlpacaforR]{order_submit}} with \code{action = "replace"}.
}
\examples{
if (rlang::is_interactive()) {
# Set a stop_loss and update it. Only works during market hours
# Create an order
o <- order_submit("BYND", 1, "buy", "market")
# Give the order a moment to process
Sys.sleep(10) 
# Get the filled price
os <- orders(status = "filled")
filled_price <- os[os$id \%in\% o$id, "filled_avg_price", drop = T]
# Set the stop loss at 5\% less than the purchase price
stop_loss <- order_submit("BYND", 1, "sell", "stop", stop_price = filled_price * .95)
# Update that to 10\% less than the purchase price
stop_loss2 <- order_replace(stop_loss$id, stop_price = filled_price * .9)
}
replace_orders()
}
\seealso{
Other Orders: 
\code{\link{order_cancel}()},
\code{\link{order_submit}()},
\code{\link{orders}()}

Other Orders: 
\code{\link{order_cancel}()},
\code{\link{order_submit}()},
\code{\link{orders}()}
}
\concept{Orders}
